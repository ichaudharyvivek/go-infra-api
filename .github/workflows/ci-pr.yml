# This workflow will build a Go project
# For more information, ref: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-go
name: CI PR

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited

concurrency:
  group: ${{ format('pr-{0}', github.event.number) }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: PR title validation
        uses: actions/github-script@v7
        env:
          CONVENTIONAL_COMMIT_REGEX: "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\\([\\w\\-\\.]+\\))?(!)?: [\\w\\s\\-,.():]+ \\((DEV|SISD|QA|BUG)-[0-9]{1,5}\\)\\.?$"
        with:
          script: |
            const title = context.payload.pull_request.title;
            const pattern = new RegExp(process.env.CONVENTIONAL_COMMIT_REGEX);

            if (!pattern.test(title)) {
              core.setFailed(
                '‚ùå PR title must follow convention:\n' +
                '   <type>([optional scope]): <description> (<Jira ticket>)\n\n' +
                '   Example: feat(auth): add login feature (S0-60230)\n' +
                '   Ref: `conventionalcommits.org` for more details'
              );
            } else {
              console.log("‚úÖ PR title follows the convention. '" + title + "'");
            }

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Sync Go workspace modules
        run: |
          echo "üì¶ Syncing Go workspace modules..."
          go work sync
          echo "‚úÖ Go workspace modules synced!"

      - name: Install golangci-lint
        run: |
          echo "Installing golangci-lint v1.64.7..."
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.7

      - name: Run golangci-lint per service
        run: |
          echo "Running golangci-lint on all services..."
          # Optional: Add `go clean -modcache` here if you suspect caching issues persist,
          # but `go work sync` should mostly handle it.
          # go clean -modcache
          go work edit -json | jq -r '.Use[].DiskPath'  | xargs -I{} golangci-lint run {}/...
          echo "‚úÖ golangci-lint completed."

      - name: Run tests
        run: |
          echo "Running tests..."
          go work edit -json | jq -r '.Use[].DiskPath' | xargs -I{} go test {}/...
          echo "‚úÖ All tests passed successfully!"
